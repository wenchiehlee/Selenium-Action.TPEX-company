name: Run Selenium On GitHub Action
on:
  push:
    branches:
      - main
  schedule:
    - cron: "0 7 * * *"     # Runs every day at 7:00 AM UTC
  workflow_dispatch:
  repository_dispatch:
    types: 2020-Now-utf8-filter.csv
jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - name: Checking out repo
        uses: actions/checkout@v4
      - name: Setting up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      - name: Installing package list
        run: apt list --installed    
      - name: Removing previous chrome instances on runner 
        run: sudo apt purge google-chrome-stable  
        
       # Need to fetch reqs if needed
      - name: Installing all necessary packages
        run: pip install -r requirements.txt
      - name: Install xvfb
        run: sudo apt-get install xvfb

      - name: Running the Python script
        run: |
          python Selenium.py
          python TWSE-company.py

      - name: CSV filter
        run: |
          cat company-utf8.csv | python csv-filter.py > company-utf8-filter.csv

      - name: Get all changed on *.csv
        id: changed-csv-files
        uses: tj-actions/changed-files@v45
        with:
          # Avoid using single or double quotes for multiline patterns
          files: |
            **.csv

      - name: Lines count
        run: |
          python CountCSVLine.py TWSE.json TWSE-company-utf8.csv "TWSE Total Company"
          python CountCSVLine.py TPEX.json company-utf8-filter.csv "TPEX Total Company"

      - name: List all changed files csv files if csv changed
        if: steps.changed-csv-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-csv-files.outputs.all_changed_files }}
        run: |
          for file in ${ALL_CHANGED_FILES}; do
            echo "$file was changed"
          done
      - name: Create MD
        id: csv-table-output
        if: steps.changed-csv-files.outputs.any_changed == 'true'
        run: |
          python csv-to-md.py company-utf8.csv utf8 > company-utf8.md
          python csv-to-md.py company-utf8-filter.csv utf8 > company-utf8-filter.md
      - name: Send mail if csv changed
        if: steps.changed-csv-files.outputs.any_changed == 'true'        
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-csv-files.outputs.all_changed_files }}
  
        uses: dawidd6/action-send-mail@v4
        with:
          # Specify connection via URL (replaces server_address, server_port, secure,
          # username and password)
          #
          # Format:
          #
          #  * smtp://user:password@server:port
          #  * smtp+starttls://user:password@server:port
          # connection_url: 
          # Required mail server address if not connection_url:
          server_address: smtp.gmail.com
          # Server port, default 25:
          server_port: 465
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: true
          # Optional (recommended) mail server username:
          username: ${{secrets.MAIL_USERNAME}}
          # Optional (recommended) mail server password:
          password: ${{secrets.MAIL_PASSWORD}}
          # Required mail subject:
          subject: Github Actions job result
          # Required recipients' addresses:
          to: wenchiehlee.investment.github-actions@blogger.com
          # Required sender full name (address can be skipped):
          from: Wen-Chieh Lee # <wenchiehlee1020@gmail.com>
          # Optional plain body:
          body: Build job of ${{github.repository}} completed successfully!
          # Optional HTML body read from file:
          html_body: file://company-utf8-filter.md
          # Optional carbon copy recipients:
          # cc: kyloren@example.com,leia@example.com
          # Optional blind carbon copy recipients:
          # bcc: r2d2@example.com,hansolo@example.com
          # Optional recipient of the email response:
          # reply_to: 
          # Optional Message ID this message is replying to:
          # in_reply_to: 
          # Optional unsigned/invalid certificates allowance:
          ignore_cert: true
          # Optional converting Markdown to HTML (set content_type to text/html too):
          convert_markdown: true
          # Optional attachments:
          # attachments: attachments.zip,git.diff,./dist/static/*.js
          # Optional priority: 'high', 'normal' (default) or 'low'
          priority: low
          # Optional nodemailerlog: true/false
          nodemailerlog: false
          # Optional nodemailerdebug: true/false if true lognodem will also be set true
          nodemailerdebug: false    
      - name: Commit and Push The Results From Python Selenium Action
        run: |
         git config --global user.name "github-actions[bot]"
         git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
         git add -A
         git add *.csv
         git add *.md
         git add *.json
         git commit -m "⬆️ GitHub Actions Results added" || true
         git push || true


         
